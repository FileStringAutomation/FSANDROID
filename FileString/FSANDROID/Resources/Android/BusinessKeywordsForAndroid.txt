*** Settings ***
Resource          CommonKeywordsForAndroid.txt

*** Keywords ***
fswin_Generate An Email Address
    ${v_emailAddress}=    Generate Random String    15    [LOWER]
    ${v_domain}=    Generate Random String    4    [LOWER]
    ${v_subDomain}=    Generate Random String    4    [LOWER]
    ${v_emailAddressGenerated}=    Catenate    SEPARATOR=@    ${v_emailAddress}    ${v_domain}.${v_subDomain}
    Set Test Variable    ${v_emailAddressGenerated}
    [Return]    ${v_emailAddressGenerated}

fswin_Generate X Email Address
    [Arguments]    ${v_numberOfEmailAddress}
    Comment    Create list to store email address
    ${v_listOfEmailAddress}=    Create List
    Comment    Convert string to integer
    ${v_numberOfEmailAddress}=    Evaluate    ${v_numberOfEmailAddress}
    : FOR    ${v_index}    IN RANGE    0    ${v_numberOfEmailAddress}
    \    ${v_currentEmailAddress}=    fswin_Generate An Email Address
    \    Append To List    ${v_listOfEmailAddress}    ${v_currentEmailAddress}
    [Return]    ${v_listOfEmailAddress}

fswin_Delete User Information In Database
    [Arguments]    ${v_emailAddress}
    #    Connect to database
    ${v_isConnectedToDatabase}=    Run Keyword And Ignore Error    DatabaseLibrary.Connect To Database Using Custom Params    adodbapi    'Provider=SQLOLEDB.1;Data Source=${v_databaseSource};Initial Catalog=${v_databaseName};User Id=${v_databaseUsername};Password=${v_databaseUserPassword};'
    Run Keyword If    '${v_isConnectedToDatabase[0]}'=='FAIL'    Fail    Could not connect to database, the error was: "${v_isConnectedToDatabase[1]}"
    #    Get current account ID based on its email address
    ${v_userID}=    DatabaseLibrary.Query    select UserID from [User] where Username='${v_emailAddress.strip()}'
    ${v_userID}=    Replace String    ${v_userID[0][0]}    {    ${EMPTY}
    ${v_userID}=    Replace String    ${v_userID}    }    ${EMPTY}
    #    Delete User In database
    Run Keyword And Ignore Error    DatabaseLibrary.Execute Sql String    DELETE FROM NotificationDeviceToken WHERE DeviceOwnerID='${v_userID}';DELETE FROM ServicePreference WHERE UserID='${v_userID}';DELETE FROM RegisteredDevice WHERE RegisteredDeviceID='${v_userID}';DELETE FROM WizardUser WHERE UserID='${v_userID}';DELETE FROM UserEmailAddress WHERE UserID='${v_userID}';DELETE FROM [User] WHERE UserID='${v_userID}'
    #    Verify Account must not exist in database
    ${v_isAccountExistInDatabase}=    Run Keyword And Return Status    DatabaseLibrary.Check If Exists In Database    select UserID from [User] where Username='${v_emailAddress.strip()}'
    Run Keyword If    ${v_isAccountExistInDatabase}==True    Fail    Your account: "${v_emailaddress}" still exist in database after delete!!!

fsand_Dropbox_Sign In
    [Arguments]    ${v_dropboxUsername}    ${v_dropboxPassword}
    fsand_Dropbox_Navigate To Sign In Screen
    Comment    Input username + password & click sign in button
    ${v_isEmailAddressExist}=    Run Keyword And Return Status    AppiumLibrary.Page Should Contain Element    ${Dropbox_SignIn_Email}
    Run Keyword If    ${v_isEmailAddressExist}==True    AppiumLibrary.Input Text    ${Dropbox_SignIn_Email}    ${v_dropboxUsername}
    ${v_isPasswordExist}=    Run Keyword And Return Status    AppiumLibrary.Page Should Contain Element    ${Dropbox_SignIn_Password}
    Run Keyword If    ${v_isPasswordExist}==True    AppiumLibrary.Input Password    ${Dropbox_SignIn_Password}    ${v_dropboxPassword}
    ${v_isSignInButtonExist}=    Run Keyword And Return Status    AppiumLibrary.Page Should Contain Element    ${Dropbox_SignIn_SignInButton}
    Run Keyword If    ${v_isSignInButtonExist}==True    AppiumLibrary.Click Element    ${Dropbox_SignIn_SignInButton}
    Sleep    10s

fsand_Dropbox_Navigate To Sign In Screen
    ${v_result}=    Run Keyword And Return Status    Wait Until Keyword Succeeds    4    1    AppiumLibrary.Page Should Contain Element    ${Dropbox_Tour_SignIn}
    Run Keyword If    ${v_result}==True    AppiumLibrary.Click Element    ${Dropbox_Tour_SignIn}
    ${v_result}=    Run Keyword And Return Status    Wait Until Keyword Succeeds    4    1    AppiumLibrary.Page Should Contain Element    ${Dropbox_SignUp_SignIn}
    Run Keyword If    ${v_result}==True    AppiumLibrary.Click Element    ${Dropbox_SignUp_SignIn}

fsand_Count Number Of Matching Items
    [Arguments]    ${v_xpath}
    [Documentation]    Input xpath locator point to first element
    ${v_numberOfMatchingItems}=    Set Variable    0
    : FOR    ${v_index}    IN RANGE    0    30
    \    ${v_currentXpath}=    Catenate    SEPARATOR=    ${v_xpath}    [@index="${v_index}"]
    \    ${v_isMatch}=    Run Keyword And Return Status    AppiumLibrary.Page Should Contain Element    ${v_currentXpath}
    \    Exit For Loop If    ${v_isMatch}==False
    \    ${v_numberOfMatchingItems}=    Set Variable    ${v_index + 1}
    Return From Keyword    ${v_numberOfMatchingItems}

fsand_Open Application Using PackageName
    [Arguments]    ${v_packageName}
    Run    adb shell monkey -p ${v_packageName} -c android.intent.category.LAUNCHER 1

fsand_Delete All Files (Which Have Been String)
    :FOR    ${v_index}    IN RANGE    0    100
    \    ${v_fileExist}=    Run Keyword And Return Status    Wait Until Keyword Succeeds    5    1    AppiumLibrary.Page Should Contain Element
    \    ...    ${ListFiles_About}
    \    Exit For Loop If    ${v_fileExist}==False
    \    AppiumLibrary.Click Element    ${ListFiles_About}
    \    fsand_Wait Until Element Exist Timeout    ${FileDetails_MenuDetails}    10    Menu in File Details doesn't exist
    \    AppiumLibrary.Click Element    ${FileDetails_MenuDetails}
    \    fsand_Wait Until Element Exist Timeout    ${FileDetails_MenuDetails_Delete}    10    Delete Button doesn't exist
    \    AppiumLibrary.Click Element    ${FileDetails_MenuDetails_Delete}
    \    fsand_Wait Until Element Exist Timeout    ${Popup_OkButton}    10    Delete Button doesn't exist
    \    AppiumLibrary.Click Element    ${Popup_OkButton}
    \    Sleep    3s

fsand_Uninstall Application
    [Arguments]    ${v_packageName}
    Run    adb uninstall ${v_packageName}

fsand_Install Application
    [Arguments]    ${v_pathToApplication}
    Run    adb install -r "${v_pathToApplication}"
