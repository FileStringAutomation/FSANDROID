*** Settings ***
Resource          BusinessKeywordsForAndroid.txt
Library           DatabaseLibrary
Library           robotmail
Library           Selenium2Library
Resource          SignInKeywords.txt

*** Variables ***

*** Keywords ***
fsand_Sign Up Successful
    [Arguments]    ${v_firstName}    ${v_lastName}    ${v_emailAddress}    ${v_passwordFS}    ${v_titleAlert}    ${v_messageAlert}
    ...    ${v_passwordGmail}
    fsand_Mark All Emails As Read After Sign Up    ${v_emailAddress}    ${v_passwordGmail}
    #    Click Sign Up Now to move to Sign Up form
    fsand_Open Sign Up Screen from Sign In Screen
    #    Input First Name
    fsand_Input First Name    ${v_firstName}
    #    Input Last Name
    fsand_Input Last Name    ${v_lastName}
    #    input email address
    fsand_Input Email Address_Sign Up    ${v_emailAddress}
    #    input password
    fsand_Input Password_Sign Up    ${v_passwordFS}
    #    Click Sign Up Button
    fsand_Click Sign Up Button
    #    Verify Title "Verify Email after Sign UP"
    fsand_Verify Title Alert    ${v_titleAlert}
    #    Verify Mesage "Verify Email after Sign UP "
    fsand_Verify Message Alert    ${v_messageAlert}
    #    Click OK button
    fsand_Click Positive Button
    Comment    fsand_Sign Up Successful with alias    ${v_data[0]}    ${v_data[1]}    ${v_emailAddressRandom}    ${v_data[3]}    ${v_data[4]}
    ...    ${v_data[5]}
    fsand_verify Email When Register An Account    ${v_firstName}    ${v_emailAddress}    ${v_passwordGmail}
    fsand_goto Link on Email to Verify Email Address    ${v_allLinks[1]}
    #    if service error ==> click ok then click again
    fsand_Sign In Successful    ${v_emailAddress}    ${v_passwordFS}

fsand_Sign Up Successful with alias
    [Arguments]    ${v_firstName}    ${v_lastName}    ${v_emailAddress}    ${v_passwordFS}    ${v_titleAlert}    ${v_messageAlert}
    ...    ${v_passwordGmail}
    Comment    fsand_Click Back    #    Close What's New
    Comment    fsand_Verify Sign In Screen
    fsand_Mark All Emails As Read After Sign Up    ${v_emailAddress}    ${v_passwordGmail}
    ${v_emailAddressRandom}=    fsand_Random Email Address    ${v_firstName}
    #    Click Sign Up Now to move to Sign Up form
    fsand_Open Sign Up Screen from Sign In Screen
    #    Input First Name
    fsand_Input First Name    ${v_firstName}
    #    Input Last Name
    fsand_Input Last Name    ${v_lastName}
    #    input email address
    fsand_Input Email Address_Sign Up    ${v_emailAddressRandom}
    #    input password
    fsand_Input Password_Sign Up    ${v_passwordFS}
    #    Click Sign Up Button
    fsand_Click Sign Up Button
    #    Verify Title "Verify Email after Sign UP"
    fsand_Verify Title Alert    ${v_titleAlert}
    #    Verify Mesage "Verify Email after Sign UP "
    fsand_Verify Message Alert    ${v_messageAlert}
    #    Click OK button
    fsand_Click Positive Button
    Comment    fsand_Sign Up Successful with alias    ${v_data[0]}    ${v_data[1]}    ${v_emailAddressRandom}    ${v_data[3]}    ${v_data[4]}
    ...    ${v_data[5]}
    fsand_verify Email When Register An Account    ${v_firstName}    ${v_emailAddress}    ${v_passwordGmail}
    fsand_goto Link on Email to Verify Email Address    ${v_allLinks[1]}
    #    if service error ==> click ok then click again
    fsand_Sign In Successful    ${v_emailAddressRandom}    ${v_passwordFS}

fsand_Sign Up Fill All Value
    [Arguments]    ${v_firstName}    ${v_lastName}    ${v_emailAddress}    ${v_password}
    fsand_Open Sign Up Screen from Sign In Screen
    #    Input First Name
    fsand_Input First Name    ${v_firstName}
    #    Input Last Name
    fsand_Input Last Name    ${v_lastName}
    #    input email address
    fsand_Input Email Address_Sign Up    ${v_emailAddress}
    #    input password
    fsand_Input Password_Sign Up    ${v_password}

fsand_Sign Up Unsuccessful
    [Arguments]    ${v_firstName}    ${v_lastName}    ${v_emailAddress}    ${v_passwordFS}    ${v_titleAlert}    ${v_messageAlert}
    fsand_Sign Up Fill All Value    ${v_firstName}    ${v_lastName}    ${v_emailAddress}    ${v_passwordFS}
    fsand_Click Sign Up Button
    fsand_Verify Title Alert    ${v_titleAlert}
    fsand_Verify Message Alert    ${v_messageAlert}
    fsand_Click Close Button

fsand_Input Email Address_Sign Up
    [Arguments]    ${v_EmailAdress}
    AppiumLibrary.Input Text    ${SignUp_EmailAddress}    ${v_EmailAdress}

fsand_Input Password_Sign Up
    [Arguments]    ${v_Password}
    AppiumLibrary.Input Password    ${SignUp_CreatePassword}    ${v_Password}

fsand_Input First Name
    [Arguments]    ${v_FirstName}
    AppiumLibrary.Input Text    ${SignUp_Fistname}    ${v_FirstName}

fsand_Input Last Name
    [Arguments]    ${v_LastName}
    AppiumLibrary.Input Text    ${SignUp_Lastname}    ${v_LastName}

fsand_Click Sign Up Button
    AppiumLibrary.Click Element    ${SignUp_CreateButton}

fsand_Sign Up Button Disable
    AppiumLibrary.Element Should Be Disabled    ${SignUp_CreateButton}

fsand_Verify Title Alert
    [Arguments]    ${v_titleAlert}
    Wait Until Keyword Succeeds    40s    2s    AppiumLibrary.Wait Until Page Contains    ${v_titleAlert}    20s

fsand_Verify Message Alert
    [Arguments]    ${v_messageAlert}
    Wait Until Keyword Succeeds    40s    2s    AppiumLibrary.Wait Until Page Contains    ${v_messageAlert}    20s

fsand_Delete User Information In Database
    [Arguments]    ${v_emailAddress}
    #    Connect to database
    ${v_isConnectedToDatabase}=    Run Keyword And Ignore Error    DatabaseLibrary.Connect To Database Using Custom Params    adodbapi    'Provider=SQLOLEDB.1;Data Source=${v_databaseSource};Initial Catalog=${v_databaseName};User Id=${v_databaseUsername};Password=${v_databaseUserPassword};'
    Run Keyword If    '${v_isConnectedToDatabase[0]}'=='FAIL'    Fail    Could not connect to database, the error was: "${v_isConnectedToDatabase[1]}"
    #    Get current account ID based on its email address
    ${v_userID}=    DatabaseLibrary.Query    select UserID from [User] where Username='${v_emailAddress.strip()}'
    ${v_userID}=    Replace String    ${v_userID[0][0]}    {    ${EMPTY}
    ${v_userID}=    Replace String    ${v_userID}    }    ${EMPTY}
    #    Delete User In database
    Run Keyword And Ignore Error    DatabaseLibrary.Execute Sql String    DELETE FROM NotificationDeviceToken WHERE DeviceOwnerId = '${v_userID}' ; DELETE FROM wizarduser WHERE userid = '${v_userID}' ; DELETE FROM [user] WHERE username = '${v_emailAddress.strip()}'
    #    Verify Account must not exist in database
    ${v_isAccountExistInDatabase}=    Run Keyword And Ignore Error    DatabaseLibrary.Check If Exists In Database    select UserID from [User] where Username='${v_emailAddress.strip()}'
    Run Keyword If    '${v_isAccountExistInDatabase[0]}'=='PASS'    Fail    Your account: "${v_emailaddress}" still exist in database after delete!!!

fsand_verify Email When Register An Account
    [Arguments]    ${v_firstname}    ${v_emailAddress}    ${v_password}
    robotmail.Open Mailbox    imap.gmail.com    ${v_emailAddress}    ${v_password}    ${True}
    ${v_emailID}=    robotmail.Wait For Mail
    #    Email body
    Comment    ${v_emailBody}=    ImapLibrary.Get Email Body    ${v_emailID}
    #    Email content
    Comment    ${v_result}=    ImapLibrary.Get Matches From Email    ${v_emailID}    [\\w\\W]*[\\s\\n]*Hi ${v_firstname},[\\n\\s]*To complete your FileString sign up process, we need you to verify your email address. This ensures that someone else isn't trying to use your address. The address entered to create this account is${v_emailAddress}.[\\s\\n]*Click the button below to verify your email address and create your FileString account:[\\s\\n]*Verify Your Email Address[\\n\\s]*If you did not sign up for this FileString account, ignore this email and the account under this email address will not be created.[\\s\\n]*Thank you.[\\s\\n]*The FileString Team - "String It"[\\w\\W]*
    ${v_allLinks}=    robotmail.Get All Links From Email    ${v_emailID}
    robotmail.Close Mailbox
    Comment    ${v_length}=    Get Length    ${v_result}
    Comment    Run Keyword If    ${v_length}!=1    Fail    Email content does not match with email's format
    Set Test Variable    ${v_allLinks}

fsand_goto Link on Email to Verify Email Address
    [Arguments]    ${v_verifyLink}
    fsweb_Open Optional Browser And Set Selenium Speed    ${v_verifyLink}    gc    30s
    #    Verify page contain "Email Address is verified"
    ${v_result}=    Run Keyword And Ignore Error    Selenium2Library.Wait Until Page Contains    Congratulations!
    Close All Browsers
    Run Keyword If    '${v_result[0]}'=='FAIL'    Fail    The link to verify email address is incorrect! Or Email address is not verified. Error message was: "${v_result[1]}"

fsweb_Open Optional Browser And Set Selenium Speed
    [Arguments]    ${v_baseUrl}    ${v_browser}    ${v_seleniumSpeed}
    Open Browser    ${v_baseUrl}    ${v_browser}
    Maximize Browser Window
    Set Selenium Timeout    ${v_seleniumSpeed}

fsand_Mark All Emails As Read After Sign Up
    [Arguments]    ${v_emailAddress}    ${v_password}
    robotmail.Open Mailbox    imap.gmail.com    ${v_emailAddress}    ${v_password}    ${True}
    Comment    robotmail.Mark Email As Read
    robotmail.Delete All Emails
    robotmail.Close Mailbox
